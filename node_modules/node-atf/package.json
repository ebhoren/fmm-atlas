{
  "name": "node-atf",
  "version": "0.0.1",
  "description": "Node module to package PNG images to ATF textures to use in Flash/AIR.",
  "main": "node-atf.js",
  "scripts": {
    "test": "test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ebhoren/node-atf.git"
  },
  "keywords": [
    "ATF"
  ],
  "author": {
    "name": "Dominic Mercier",
    "email": "d.mercier84@gmail.com"
  },
  "readmeFilename": "README.md",
  "license": "BSD",
  "readme": "Node-ATF\n=========\n\n## Usage\n\n\tvar nodeatf = require('node-atf');\n\t\tnodeatf.png2atf('filename.png', 'output.atf', 'options', function(error, stdout, stderr){\n\t\t\tconsole.log(error, stdout, stderr);\n\t\t});\n\n\n## Options\n\n-c \tCreate a block compressed texture set (DXT1+ETC1+PVRTC4bpp).\n   \tUse d, e or p to only encode and embed either dxt1, etc1 or pvrtc.\n\n-m \tCreate a cubemap. Input files need to be named <filename><n>.png\n   \twhere n=0-5. Order is [-x,+x,-y,+y,-z,+z].\n\n-r  Compress block compressed textures using JPEG-XR+LZMA to reduce file size.\n-e  Embed empty (black) mip maps.\n-n  Embed a specific range of texture levels (main texture + mip map). The range is defined as <start>,<end>. 0 is the main texture, mip map starts with 1.\n-x  Read mip map images from input files instead of autocreating them. Input files need to be named <filename><ll>.png\n    where ll=00-12. For cubemaps the format is <filename><ll><n>.png\n-s  Silence output during compression.\n\nOptions for non-block compressed textures:\n   -4  Use 4:4:4 colorspace\n   -2  Use 4:2:2 colorspace\n   -0  Use 4:2:0 colorspace\n\n   -q  quantization level. 0 == lossless. (default is 30 for standard\n       textures and 0 for block compressed textures)\n   -f  trim flex bits. 0 == lossless. (default is 0)\n\n\n## License (BSD)",
  "_id": "node-atf@0.0.1",
  "_from": "node-atf@"
}
